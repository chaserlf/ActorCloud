
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

rtmp {                #RTMP服务
     server {
		listen 1935;  #//服务端口 
		chunk_size 4096;   #//数据传输块的大小
    
		application myapp {
			live on;
			hls on; #这个参数把直播服务器改造成实时回放服务器。
			wait_key on; #对视频切片进行保护，这样就不会产生马赛克了。
			hls_path /usr/local/nginx/myapp; #切片视频文件存放位置。
			hls_fragment 10s;     #每个视频切片的时长。
			hls_playlist_length 60s;  #总共可以回看的事件，这里设置的是1分钟。
			hls_continuous on; #连续模式。
			hls_cleanup on;    #对多余的切片进行删除。
			hls_nested on;     #嵌套模式。
		}

		application vod {
			play /usr/local/nginx/vod/flvs;
		}
	}		
}

http {
    include       mime.types;
    default_type  application/octet-stream;
	charset   utf-8;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    server_names_hash_bucket_size 64;
    server_tokens off;
    client_max_body_size  128m;
    gzip  on;
    gzip_min_length  1k;
    gzip_comp_level  6;
    gzip_types       text/plain application/x-javascript application/javascript text/javascript text/css application/xml;

    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

		location /stat {
			rtmp_stat all;
			rtmp_stat_stylesheet stat.xsl;
		}

		location /stat.xsl { #第二处添加的location字段。
			root /usr/local/nginx/module/nginx-rtmp-module/;
		}


		location /control {
			rtmp_control all;
		}
			
		location /rtmp-publisher {
            root  /usr/local/nginx/module/nginx-rtmp-module/test;
        }

        location / {
            root /usr/local/nginx/module/nginx-rtmp-module/test/www;
        }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
	
	include virtual_host.conf;
	
	server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  logs/host.access.log  main;

		location / {
			root html;
			index index.html index.htm;
		}
    }
	
    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}


